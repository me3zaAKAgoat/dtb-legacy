@import 'variables';

::-webkit-scrollbar-track {
	border-radius: 10px;
	background-color: rgba(255, 255, 255, 0.05);
}

::-webkit-scrollbar {
	width: 7px;
}

::-webkit-scrollbar-thumb {
	border-radius: 10px;
	box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
	-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
	background-color: $secondary-color;
}

.hudContainer {
	min-height: 13%;
	max-height: 100px;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	margin: 0 auto;
	flex-grow: 1;
}

.hud {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;
	background-color: $unfocused-task-container-bg;
	height: 60%;
	min-width: 500px;
	max-width: 500px;
	border: 1px solid #393939;
	border-radius: 10px;
	margin: 10px 0px;
	padding: 5px 10px;
	.completion {
		width: 30%;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-around;
		h3 {
			font-size: 0.7rem;
			color: $text-color;
		}
	}
	.timeLeft {
		width: 50%;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-around;
		h3 {
			font-size: 0.7rem;
			color: $text-color;
		}
		h2 {
			font-size: 1.1rem;
			color: $text-color;
			font-family: 'SF PRO DISPLAY BOLD';
		}
	}
	.concludeButton {
		background-color: $text-color;
		width: 20%;
		height: 33px;
		margin: 0 2% 0 0;
		font-size: 0.9rem;
		font-family: 'SF PRO DISPLAY BOLD';
		text-align: center;
		color: $secondary-color;
		padding: 0% 0% 0.22rem 0%;
		border-radius: 0.9rem;
		border: none;
		transition: 100ms ease-in 0ms;
		transition-property: background-color, color, outline, box-shadow;
		outline: $secondary-color solid 1px;
	}
	.concludeButton:hover {
		cursor: pointer;
		color: $text-color;
		background-color: $secondary-color;
		outline: $text-color solid 1px;
	}
}

.main {
	min-height: 87%;
	border: none;
	display: flex;
	flex-direction: row;
	align-items: stretch;
	justify-content: center;
	flex-grow: 1;
}

.separatingVerticalLine {
	max-width: 1px;
	min-width: 1px;
	margin-top: 1%;
	margin-bottom: 4%;
	height: 95%;
	background-color: $unfocused-task-container-bg;
	flex-grow: 1;
}

.mainChildrenContainers {
	width: 50%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: start;
	overflow: auto;
	flex-grow: 1;
	overflow: hidden;
	background: radial-gradient(rgba(255, 255, 255, 0.02), $body-bg-color 90%)
}

.mainChildrenTitle {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	width: 15%;
	min-width: 60px;
	height: 30px;
	font-size: 1.1rem;
	font-family: 'SF PRO DISPLAY BOLD';
	text-align: center;
	color: $text-color;
	margin: 2px 0px 10px;
	background-color: $unfocused-task-container-bg;
	border-radius: 0.35rem;
}

.notesTextArea {
	font-family: 'SF PRO DISPLAY REGULAR';
	font-size: 1rem;
	text-align: left;
	color: $text-color;
	line-height: 1.8;
	margin: 1px 10%;
	padding: 2%;
	width: 80%;
	height: 85%;
	background-color: rgba(0, 0, 0, 0.3);
	border: none;
	border-radius: 15px;
	outline: rgba(255, 255, 255, 0.2) solid 0.05rem;
	transition: outline 50ms ease-in-out 0ms;

	overflow: auto;
	word-wrap: break-word;
	white-space: pre-wrap;
	word-break: break-word;
	resize: none;
	&:hover,
	&:focus {
		outline: rgba(255, 255, 255, 0.2) solid 0.13rem;
	}
}

.taskList {
	flex-grow: 1;
	display: flex;
	flex-direction: column;
	justify-content: baseline;
	align-items: center;
	width: 100%;
	position: relative;
	top: 5px;
	max-height: 100%;
	overflow-y: overlay;
	overflow-x: hidden;
}

.taskContainer {
	overflow: hidden;
	background-color: $unfocused-task-container-bg;
	height: $task-item-height;
	min-height: $task-item-height;
	width: 80%;
	max-width: 600px;
	border-radius: 5px;
	border: 1px solid #3d3d3d;
	filter: drop-shadow(0px 2px 5px rgba(0, 0, 0, 0.7));
	margin: 10px;
	display: flex;
	flex-direction: column;
	align-items: stretch;
	justify-content: start;
	transition: 200ms ease-in-out 50ms;
	transition-property: min-height;

	/* Chrome, Safari, Edge, Opera */
	input::-webkit-outer-spin-button,
	input::-webkit-inner-spin-button {
		-webkit-appearance: none;
		appearance: none;
		margin: 0;
	}

	h1 {
		font-family: 'SF PRO DISPLAY BOLD';
		font-size: 1.05rem;
		display: flex;
		justify-content: center;
		align-items: center;
		min-height: $task-item-height;
		height: $task-item-height;
		width: 100%;
		background: none;
		border: none;
		margin: 0;
		padding: 0;
		color: $text-color;
		cursor: pointer;
		transition: background-color 55ms ease-in 15ms;
		&:hover {
			background-color: $focused-task-container-bg;
		}
	}

	/* Firefox */
	input[type='number'] {
		-moz-appearance: textfield;
		appearance: none;
	}

	button {
		font-family: 'SF PRO DISPLAY BOLD';
		font-size: 1.05rem;
		min-height: $task-item-height;
		height: $task-item-height;
		width: 100%;
		background: none;
		border: none;
		margin: 0;
		padding: 0;
		color: $text-color;
		cursor: pointer;
		transition: background-color 55ms ease-in 15ms;
		&:hover {
			background-color: $focused-task-container-bg;
		}
	}
}

.expandedContainer {
	flex-grow: 1;
	visibility: 0;
	opacity: 0;
	border: none;
	height: 200px - $task-item-height;
	background-color: $focused-task-container-bg;
	transition: 15ms ease-in 100ms;
	transition-property: opacity, visibility;
	display: flex;
	flex-direction: column;
	justify-content: start;
	align-items: stretch;
	p {
		height: 70%;
		overflow: auto;
		padding: 0 10%;
		text-align: center;
		margin: 2% 4%;
		color: $text-color;
	}
	.sliderEditButtonContainer {
		height: 30%;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		margin: 1% 4%;
		// overflow: hidden;
		.progressionSlider {
			width: 70%;
			margin-left: 5%;
			margin-right: 5%;
			background-color: $secondary-color;
			box-shadow: $text-color;
			-webkit-appearance: none;
			outline: none;
			border-radius: 10px;
			overflow: hidden;
		}
		.progressionSlider::-webkit-slider-thumb {
			-webkit-appearance: none;
			width: 15px;
			height: 15px;
			border-radius: 50%;
			background: $text-color;
			cursor: pointer;
			border: 4px solid #333;
			box-shadow: -407px 0 0 400px $text-color;
		}
		.editTaskButton {
			width: 10%;
			height: 10%;
			min-height: 50%;
			svg {
				width: 100%;
				height: 100%;
			}
		}
		input[type='number'] {
			width: 10%;
			color: $text-color;
			text-align: center;
			background-color: $secondary-color;
			border: none;
			border-radius: 2px;
		}
	}
}

.addTaskButton {
	height: 0.9 * $task-item-height;
	width: 0.9 * $task-item-height;
	min-height: 0.9 * $task-item-height;
	min-width: 0.9 * $task-item-height;
	border-radius: 50%;
	padding: 0;
	border: none;
	background: none;
	margin: 20px;
	cursor: pointer;
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: stretch;
	filter: drop-shadow(0px 2px 5px rgba(0, 0, 0, 1));
	transition: background-color, height, width, transform, 50ms ease-in-out 10ms;
	svg {
		position: absolute;
		height: 100%;
		width: 100%;
		filter: brightness(80%);
	}

	&:hover {
		background-color: rgba(255, 255, 255, 0.04);
		height: 0.93 * $task-item-height;
		width: 0.93 * $task-item-height;
		transform: translateY(-1%);
		svg {
			filter: brightness(90%);
		}
	}
}

.taskModal {
	visibility: hidden;
	opacity: 0;
	transition: opacity 200ms ease-in 0ms;
	inset: 0px;
	z-index: 0;
	background-color: rgba(0, 0, 0, 0.8);
	border-radius: 0px;
	position: absolute;
}

.taskFormContainer {
	z-index: 1;
	position: absolute;
	text-align: left;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	margin: 90px auto auto;
	background-color: $unfocused-task-container-bg;
	height: 450px;
	width: 425px;
	border-radius: 4px;
	border: 1px solid rgb(109, 109, 109);
	input,
	textarea {
		background-color: $secondary-color;
		border: none;
		border-radius: 4px;
		height: 30px;
		color: $text-color;
		padding: 10px;
		resize: none;
	}
	form {
		font-family: 'SF PRO DISPLAY REGULAR';
		color: $text-color;
		height: 93%;
		display: flex;
		flex-direction: column;
		justify-content: space-around;
		align-items: stretch;
		margin: 15px 20px;
		h1 {
			font-size: 1.6rem;
			margin: 5px 0px;
			border-bottom: 2px solid currentColor;
		}
		.taskNameContainer {
			display: flex;
			flex-direction: column;
			justify-content: space-between;
			label {
				font-family: 'SF PRO DISPLAY BOLD';

				margin-bottom: 7px;
			}
		}
		.taskDescriptionContainer {
			display: flex;
			flex-direction: column;
			justify-content: space-between;
			label {
				font-family: 'SF PRO DISPLAY BOLD';

				margin-bottom: 7px;
			}
			textarea {
				font-family: 'SF PRO DISPLAY REGULAR';
				resize: noremne;
				height: 100px;
			}
		}
		.priority {
			p {
				font-family: 'SF PRO DISPLAY BOLD';

				margin-top: 0px;
				margin-bottom: 10px;
			}
			input {
				height: 10px;
				accent-color: $body-bg-color;
			}
		}
		.buttonsContainer {
			display: flex;
			flex-direction: row;
			justify-content: space-around;
			align-items: center;
			button {
					margin: 10px;
					margin-top: 30px;
					margin-bottom: 10px;
					border-radius: 2px;
					height: 30px;
					width: 65px;
					font-size: 1rem;
					background-color: $text-color;
					font-family: 'SF PRO DISPLAY BOLD';
					text-align: center;
					color: $secondary-color;
					border: none;
					transition: 100ms ease-in 0ms;
					transition-property: background-color, color, outline;
					outline: $secondary-color solid 1px;
				}
			button:hover {
				cursor: pointer;
				color: $text-color;
				outline: $text-color solid 1px;
			}
			.submitButton:hover {
				background-color: $success-color;
			}
			.cancelButton:hover {
				background-color: $error-color;
			}
		}
	}
}

.badApiCallMessage {
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
	bottom: 0px;
	background-color: $error-color;
	font-family: 'SF PRO DISPLAY BOLD';
	font-size: 14px;
	color: #cccccc;
	height: 20px;
	width: 100%;
	vertical-align: middle;
	line-height: 25px;
	opacity: 1;
}
.goodApiCallMessage {
	opacity: 0;
	position: absolute;
	bottom: 0px;
	background-color: $success-color;
	height: 500px;
	transition: 500ms ease-in 500ms;
	transition-property: height, opacity;
}

/*
Use CSS variables: Instead of using hard-coded color values, you could use CSS variables. This makes it easier to change the theme and make global changes to the color palette.

Use mixins: You could create mixins for common styles, such as border-radius and box-shadow, to make the code more concise and easier to maintain.

Consistent spacing: Ensure that there is consistent spacing between rules to make it easier to read the code.

Consistent naming: Consider using a consistent naming convention for classes and mixins to make the code more readable and maintainable.

Simplify styles: Remove unnecessary styles, such as the align-items and justify-content properties, if they are set to the default values.

Remove vendor prefixes: Vendor prefixes, such as -webkit-, are no longer necessary as modern browsers support the latest CSS standards. You can safely remove them.

*/